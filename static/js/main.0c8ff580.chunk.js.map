{"version":3,"sources":["components/Page.js/index.js","components/Title/index.js","components/NavBar/index.js","components/Container/index.js","App.js","index.js"],"names":["CharCard","props","onClick","handleClick","className","data-id","id","alt","src","image","Title","children","NavBar","Navbar","collapseOnSelect","sticky","bg","variant","Nav","score","highscore","Logic","state","characters","Characters","idClicked","highScore","element","map","chars","Col","key","idsClicked","arrayShuffle","arr","newPos","temp","console","log","this","i","length","Math","floor","random","arraz","includes","setState","push","Row","xs","sm","Component","App","Container","ReactDOM","render","document","getElementById"],"mappings":"6/CAoBeA,MAhBf,SAAkBC,GAChB,OACE,6BAEA,yBAAKC,QAASD,EAAME,YAAaC,UAAU,QACzC,yBAAKC,UAASJ,EAAMK,GAAIF,UAAU,iBAChC,yBACEG,IAAI,MACJC,IAAKP,EAAMQ,Y,MCDNC,MANf,SAAeT,GACX,OACI,4BAAQG,UAAU,UAAS,wBAAIA,UAAU,SAASH,EAAMU,UAAc,uBAAGL,GAAG,aAAN,wF,sECW/DM,MAdf,SAAgBX,GACZ,OACI,oCACI,kBAACY,EAAA,EAAD,CAAQC,kBAAgB,EAACV,UAAY,SAASW,OAAO,MAAMC,GAAG,OAAOC,QAAQ,QACzE,kBAACC,EAAA,EAAD,CAAKd,UAAU,WACX,yBAAKA,UAAY,QAAjB,iBACA,yBAAKA,UAAY,QAAjB,UAAiCH,EAAMkB,OACvC,yBAAKf,UAAY,QAAjB,cAAqCH,EAAMmB,e,gBC8EhDC,E,2MA9EXC,MAAQ,CACJC,WAAYC,EACZC,UAAW,GACXN,MAAO,EACPO,UAAW,G,EAIfC,QAAU,EAAKL,MAAMC,WAAWK,KAAI,SAAAC,GAChC,OAAO,kBAACC,EAAA,EAAD,CAAKC,IAAKF,EAAMvB,IAAI,kBAAC,EAAD,eAAMyB,IAAKF,EAAMvB,IAAQuB,EAAzB,CAAgC1B,YAAa,kBAAM,EAAKA,YAAY0B,EAAMvB,Y,EAGzG0B,WAAa,G,EAGbC,aAAe,SAAUC,GAErB,IAAIC,EAAQC,EADZC,QAAQC,IAAIC,KAAKjB,MAAMC,YAEvB,IAAK,IAAIiB,EAAIN,EAAIO,OAAS,EAAGD,EAAI,EAAGA,IAChCL,EAASO,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IACzCJ,EAAOF,EAAIM,GACXN,EAAIM,GAAKN,EAAIC,GACbD,EAAIC,GAAUC,EAGlB,OADAC,QAAQC,IAAIJ,GACLA,G,EAGX/B,YAAc,SAACG,GAGP,IAAIuC,EAAQ,EAAKvB,MAAMG,UACvBY,QAAQC,IAAIO,GACTA,EAAMC,SAASxC,GACd,EAAKgB,MAAMH,MAAQ,EAAKG,MAAMI,UAC9B,EAAKqB,SAAS,CACVtB,UAAW,GACXN,MAAO,EACPO,UAAW,EAAKJ,MAAMH,SAK1BkB,QAAQC,IAAI,QACZ,EAAKS,SAAS,CACVtB,UAAW,GACXN,MAAO,MAMf,EAAKa,WAAWgB,KAAK1C,GACrB,EAAKyC,SAAS,CACVxB,WAAY,EAAKU,aAAa,EAAKX,MAAMC,YACzCE,UAAW,EAAKO,WAChBb,MAAO,EAAKG,MAAMH,MAAQ,M,wEAO5B,IAAD,OACL,OACI,6BACI,kBAAC,EAAD,CAAQC,UAAWmB,KAAKjB,MAAMI,UAAWP,MAAOoB,KAAKjB,MAAMH,QAC3D,kBAAC,EAAD,oBACA,kBAAC8B,EAAA,EAAD,KACCV,KAAKjB,MAAMC,WAAWK,KAAI,SAAAC,GACvB,OAAO,kBAACC,EAAA,EAAD,CAAKoB,GAAG,IAAIC,GAAG,IAAIpB,IAAKF,EAAMvB,IAAI,kBAAC,EAAD,eAAMyB,IAAKF,EAAMvB,IAAQuB,EAAzB,CAAgC1B,YAAa,kBAAM,EAAKA,YAAY0B,EAAMvB,kB,GAxEnH8C,aCILC,MANf,WACE,OACA,kBAACC,EAAD,OCJFC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0c8ff580.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles.css\";\r\n\r\n\r\nfunction CharCard(props) {\r\n  return (\r\n    <div>\r\n\r\n    <div onClick={props.handleClick} className=\"card\">\r\n      <div data-id={props.id} className=\"img-container\">\r\n        <img \r\n          alt=\"LOL\"\r\n          src={props.image}\r\n        />\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharCard;","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction Title(props) {\r\n    return (\r\n        <header className=\"Header\"><h1 className=\"Title\">{props.children}</h1><p id=\"innerText\">Click on an image to earn points. Be careful not to click on the same image twice!</p></header>\r\n    )\r\n};\r\n\r\nexport default Title;","import React from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport './styles.css'\r\nfunction NavBar(props) {\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect className = \"NavBar\" sticky=\"top\" bg=\"dark\" variant=\"dark\">\r\n                <Nav className=\"mr-auto\">\r\n                    <div className = \"Text\" >Clicking Game</div>\r\n                    <div className = \"Text\" >Score: {props.score}</div>\r\n                    <div className = \"Text\" >HighScore: {props.highscore}</div>\r\n                </Nav>\r\n            </Navbar>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\r\nimport Page from '../Page.js/index.js';\r\nimport Title from '../../components/Title/index';\r\nimport Characters from '../../chars.json';\r\nimport NavBar from '../../components/NavBar/index';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass Logic extends Component {\r\n    // Setting the component's initial state\r\n    state = {\r\n        characters: Characters,\r\n        idClicked: [],\r\n        score: 0,\r\n        highScore: 0\r\n    };\r\n\r\n    // This will hold each character from array, and allow you to use grid system.Not used no more.\r\n    element = this.state.characters.map(chars => {\r\n        return <Col key={chars.id}><Page key={chars.id} {...chars} handleClick={() => this.handleClick(chars.id)} /></Col>\r\n    })\r\n\r\n    idsClicked = []\r\n\r\n    //This will randomize your array\r\n    arrayShuffle = function (arr) {\r\n        console.log(this.state.characters)\r\n        let newPos, temp;\r\n        for (let i = arr.length - 1; i > 0; i--) {\r\n            newPos = Math.floor(Math.random() * (i + 1))\r\n            temp = arr[i];\r\n            arr[i] = arr[newPos];\r\n            arr[newPos] = temp;\r\n        }\r\n        console.log(arr)\r\n        return arr\r\n    }\r\n\r\n    handleClick = (id) => {\r\n        // If the score is greater than the highscore, that is your new highscore\r\n        //if (this.state.idClicked === id) {\r\n            var arraz = this.state.idClicked;\r\n            console.log(arraz)\r\n            if(arraz.includes(id)){\r\n            if (this.state.score > this.state.highScore) {\r\n                this.setState({\r\n                    idClicked: [],\r\n                    score: 0,\r\n                    highScore: this.state.score\r\n                })\r\n            }\r\n            // else just reset the scores\r\n            else {\r\n                console.log(\"LOSE\")\r\n                this.setState({\r\n                    idClicked: [],\r\n                    score: 0\r\n                })\r\n            }\r\n\r\n        }\r\n        else {\r\n            this.idsClicked.push(id)\r\n            this.setState({\r\n                characters: this.arrayShuffle(this.state.characters),\r\n                idClicked: this.idsClicked,\r\n                score: this.state.score + 1\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar highscore={this.state.highScore} score={this.state.score} />\r\n                <Title>CLICKY GAME</Title>\r\n                <Row>\r\n                {this.state.characters.map(chars => {\r\n                    return <Col xs=\"6\" sm=\"3\" key={chars.id}><Page key={chars.id} {...chars} handleClick={() => this.handleClick(chars.id)} /></Col>\r\n                })}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Logic;\r\n","import React from 'react';\nimport './App.css';\nimport Page from './components/Page.js';\nimport Title from './components/Title/index';\nimport Characters from './chars.json';\nimport Container from './components/Container';\n\nfunction App() {\n  return (\n  <Container />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}